name: Release

permissions:
    contents: write

on:
    push:
        tags:
            - v[0-9]+.*

jobs:
    create-release:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: taiki-e/create-gh-release-action@v1
              with:
                  # (required) GitHub token for creating GitHub Releases.
                  token: ${{ secrets.GITHUB_TOKEN }}
    upload-assets:
        strategy:
            matrix:
                include:
                    - target: aarch64-unknown-linux-musl
                      os: ubuntu-latest
                    - target: aarch64-apple-darwin
                      os: macos-latest
                    - target: x86_64-unknown-linux-musl
                      os: ubuntu-latest
                    - target: x86_64-apple-darwin
                      os: macos-latest
                    # Universal macOS binary is supported as universal-apple-darwin.
                    - target: universal-apple-darwin
                      os: macos-latest
                    - target: x86_64-pc-windows-msvc
                      os: windows-latest

        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup Pages
              uses: actions/configure-pages@v3
            - uses: pnpm/action-setup@v2
              with:
                  version: 8
            - uses: dtolnay/rust-toolchain@stable
            - run: |
                  cd crates/client/frontend
                  pnpm install
                  pnpm run build
            - uses: taiki-e/upload-rust-binary-action@v1
              with:
                  # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.
                  # Note that glob pattern is not supported yet.
                  bin: bramlett
                  # (optional) Archive name (non-extension portion of filename) to be uploaded.
                  # [default value: $bin-$target]
                  # [possible values: the following variables and any string]
                  #   variables:
                  #     - $bin    - Binary name (non-extension portion of filename).
                  #     - $target - Target triple.
                  #     - $tag    - Tag of this release.
                  # When multiple binary names are specified, default archive name or $bin variable cannot be used.
                  archive: bramlett-$target
                  target: ${{ matrix.target }}
                  tar: none
                  zip: all
                  # (required) GitHub token for uploading assets to GitHub Releases.
                  token: ${{ secrets.GITHUB_TOKEN }}
