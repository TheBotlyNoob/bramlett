name: Release

permissions:
    contents: write

on:
    push:
        tags:
            - v[0-9]+.*

jobs:
    create-release:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: taiki-e/create-gh-release-action@v1
              with:
                  # (required) GitHub token for creating GitHub Releases.
                  token: ${{ secrets.GITHUB_TOKEN }}
    upload-assets:
        strategy:
            matrix:
                include:
                    - target: x86_64-unknown-linux-gnu
                      flutter: linux
                      os: ubuntu-latest
                    - target: x86_64-apple-darwin
                      flutter: macos
                      os: macos-latest
                    - target: x86_64-pc-windows-msvc
                      flutter: windows
                      os: windows-latest

        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@stable
            - uses: subosito/flutter-action@v2
              with:
                channel: 'stable'
                architecture: x64
            - run: |
                sudo apt-get update -y
                sudo apt-get install -y ninja-build libgtk-3-dev
              if: matrix.flutter == 'linux'
            - run: flutter config --enable-${{ matrix.flutter }}-desktop
            - run: flutter build ${{ matrix.flutter }}
            - name: zip windows
              run: Compress-Archive -Path build/windows/runner/Release/* -DestinationPath bramlett-${{ matrix.target }}.zip
              if: matrix.flutter == 'windows'
            - name: zip linux/mac
              run: zip -r bramlett-${{ matrix.target }}.zip build/${{ matrix.flutter }}/x64/release/bundle/*
              if: matrix.flutter == 'linux' || matrix.flutter == 'macos'
            - name: Upload binaries to release
              uses: svenstaro/upload-release-action@v2
              with:
                repo_token: ${{ secrets.GITHUB_TOKEN }}
                file: bramlett-*.zip
                tag: ${{ github.ref }}
                overwrite: true
                file_glob: true
            


