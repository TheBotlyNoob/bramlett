name: Build Release

concurrency:
    group: "bin"
    cancel-in-progress: true

on:
    release:
        types: [created]

jobs:
    frontend:
        runs-on: windows-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - uses: pnpm/action-setup@v2
              with:
                  version: 8
            - run: cd crates/client/frontend
                  pnpm install
                  pnpm run build

    build_linux:
        needs: frontend
        strategy:
            fail-fast: false
            matrix:
                platform:
                    - name: linux 64bit
                      os: ubuntu-latest
                      arch: x86_64-unknown-linux-musl
                      artifact: bramlett-linux-amd64
                      dpkg_arch: amd64

                    - name: linux arm64
                      os: ubuntu-latest
                      arch: aarch64-unknown-linux-musl
                      artifact: bramlett-linux-aarch64
                      dpkg_arch: arm64

                    - name: linux arm7
                      os: ubuntu-latest
                      arch: armv7-unknown-linux-gnueabihf
                      artifact: bramlett-linux-armv7
                      dpkg_arch: armhf

                    - name: linux 32bit
                      os: ubuntu-latest
                      arch: i686-unknown-linux-gnu
                      artifact: bramlett-linux-i686
                      dpkg_arch: i386

                    - name: linux mipsel
                      os: ubuntu-latest
                      arch: mipsel-unknown-linux-musl
                      artifact: bramlett-linux-mipsel
                      dpkg_arch: mipsel

                    - name: linux mips
                      os: ubuntu-latest
                      arch: mips-unknown-linux-musl
                      artifact: bramlett-linux-mips
                      dpkg_arch: mips

        runs-on: ${{ matrix.platform.os }}
        steps:
            - uses: actions/checkout@v3

            - name: Get release
              id: get_release
              uses: bruceadams/get-release@v1.2.3
              env:
                  GITHUB_TOKEN: ${{ github.token }}

            - name: build release
              uses: actions-rs/cargo@v1
              with:
                  use-cross: true
                  command: build
                  args: --target ${{ matrix.platform.arch }} --release --all

            - name: Upload Binary
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ github.token }}
              with:
                  upload_url: ${{ steps.get_release.outputs.upload_url }}
                  asset_path: ./target/${{ matrix.platform.arch }}/release/client
                  asset_name: ${{ matrix.platform.artifact }}
                  asset_content_type: application/octet-stream

    build_windows:
        needs: frontend
        strategy:
            fail-fast: false
            matrix:
                platform:
                    - name: windows 32bit
                      os: windows-latest
                      arch: i686-pc-windows-msvc
                      artifact: bramlett-windows-x86
                    - name: windows 64bit
                      os: windows-latest
                      arch: x86_64-pc-windows-msvc
                      artifact: bramlett-windows-x86_64
        runs-on: ${{ matrix.platform.os }}
        steps:
            - uses: actions/checkout@v3

            - name: Get release
              id: get_release
              uses: bruceadams/get-release@v1.2.3
              env:
                  GITHUB_TOKEN: ${{ github.token }}
            - uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.platform.arch }}

            - name: Upload .exe
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ github.token }}
              with:
                  upload_url: ${{ steps.get_release.outputs.upload_url }}
                  asset_path: ./target/${{ matrix.platform.arch }}/release/client.exe
                  asset_name: ${{ matrix.platform.artifact }}.exe
                  asset_content_type: application/octet-stream
