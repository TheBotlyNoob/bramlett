// This file was generated by [rspc](https://github.com/oscartbeaumont/rspc). Do not edit this file manually.
export type Procedures = { queries: { key: "gameState"; input: GameId; result: GameStatus; error: Error } | { key: "games"; input: never; result: { [key in GameId]: Game }; error: Error } | { key: "version"; input: never; result: string; error: Error }; mutations: { key: "downloadGame"; input: GameId; result: null; error: Error }; subscriptions: never }

export type Error = "GameNotFound" | "GameCantDownload" | "Client"

export type Game = { info: GameInfo; status: GameStatus }

/**
 * The ID of a game.
 */
export type GameId = number

export type GameInfo = { 
/**
 * The name of the game.
 */
name: string; 
/**
 * The game's ID.
 */
id: GameId; 
/**
 * A public Google Drive ID, linking to a zip file with a password of "game".
 */
gdrive_id: string; 
/**
 * The path to the game's executable, relative to the game directory.
 */
exe: string; 
/**
 * Extra flags to pass to the game's executable.
 */
args: string[]; 
/**
 * RHAI script with `post_install`, `pre_run` and `post_run` functions.
 * 
 * `pre_run` should be used to sync the `save_dir`'s save data with the `game_dir`.
 * `post_run` should be used to sync the `game_dir`'s save data with the `save_dir`.
 * 
 * File system is available.
 * 
 * # Constants
 * 
 * `game_dir`: `PathBuf` to the game directory.
 * 
 * `save_dir`: `PathBuf` to the save directory.
 */
hooks: string }

export type GameStatus = "NotDownloaded" | 
/**
 * Downloading - (current, total)
 */
"Downloading" | 
/**
 * Installing (unzipping) - (current, total)
 */
{ Installing: [number, number] } | "Running" | "Stopped"
